"""add avatar

Revision ID: 51af503da586
Revises: 4c97a17b31a2
Create Date: 2016-01-13 10:48:00.437068

"""

# revision identifiers, used by Alembic.
revision = '51af503da586'
down_revision = '4c97a17b31a2'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        'users',
        sa.Column(
            'avatar',
            sa.VARCHAR(length=64)
        )
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table(u'roles',
    sa.Column(u'id', sa.INTEGER(), server_default="nextval('roles_id_seq'::regclass)", nullable=False),
    sa.Column(u'name', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column(u'default', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column(u'permissions', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint(u'id', name=u'roles_pkey')
    )
    op.create_table(u'tags',
    sa.Column(u'id', sa.INTEGER(), server_default="nextval('tags_id_seq'::regclass)", nullable=False),
    sa.Column(u'name', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint(u'id', name=u'tags_pkey')
    )
    op.create_table(u'users',
    sa.Column(u'id', sa.INTEGER(), server_default="nextval('users_id_seq'::regclass)", nullable=False),
    sa.Column(u'email', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column(u'username', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column(u'role_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['role_id'], [u'roles.id'], name=u'users_role_id_fkey'),
    sa.PrimaryKeyConstraint(u'id', name=u'users_pkey')
    )
    op.create_table(u'comments',
    sa.Column(u'id', sa.INTEGER(), server_default="nextval('comments_id_seq'::regclass)", nullable=False),
    sa.Column(u'body', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column(u'body_html', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column(u'timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column(u'disabled', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column(u'author_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column(u'post_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['author_id'], [u'users.id'], name=u'comments_author_id_fkey'),
    sa.ForeignKeyConstraint(['post_id'], [u'posts.id'], name=u'comments_post_id_fkey'),
    sa.PrimaryKeyConstraint(u'id', name=u'comments_pkey')
    )
    op.create_table(u'posttag',
    sa.Column(u'post_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column(u'tag_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['post_id'], [u'posts.id'], name=u'posttag_post_id_fkey'),
    sa.ForeignKeyConstraint(['tag_id'], [u'tags.id'], name=u'posttag_tag_id_fkey'),
    sa.PrimaryKeyConstraint(u'post_id', u'tag_id', name=u'posttag_pkey')
    )
    op.create_table(u'posts',
    sa.Column(u'id', sa.INTEGER(), server_default="nextval('posts_id_seq'::regclass)", nullable=False),
    sa.Column(u'title', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column(u'text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column(u'time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column(u'author_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column(u'text_html', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['author_id'], [u'users.id'], name=u'posts_author_id_fkey'),
    sa.PrimaryKeyConstraint(u'id', name=u'posts_pkey')
    )
    ### end Alembic commands ###
